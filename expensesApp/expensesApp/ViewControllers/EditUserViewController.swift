//
//  EditUserViewController.swift
//  expensesApp
//
//  Created by Juan Mancilla on 7/21/20.
//  Copyright Â© 2020 Juan Mancilla. All rights reserved.
//

import UIKit
import Firebase
import SDWebImage

class EditUserViewController: UIViewController,UINavigationControllerDelegate, UIImagePickerControllerDelegate  {

    //Segue data
    var user = User()
    
    
    //Outlet declarations
    @IBOutlet weak var welcomeLabel: UILabel!
    @IBOutlet weak var profileImage: UIImageView!
    @IBOutlet weak var nombreTextField: UITextField!
    @IBOutlet weak var edadTextField: UITextField!
    @IBOutlet weak var dniTextField: UITextField!
    
    //Segmented controllers and value declaration-
    @IBOutlet weak var segmentedControlEdad: UISegmentedControl!
    var segmentedControlValue:String = ""
    @IBAction func segmentedActionEdad(_ sender: Any) {
        if segmentedControlEdad.selectedSegmentIndex == 0{
             self.segmentedControlValue = "Hombre"
         }else{
             self.segmentedControlValue = "Mujer"
         }
    }

    
    override func viewDidLoad() {
        super.viewDidLoad()

        //username Split
        let fullName = user.displayName
        let fullNameArray:[String] = fullName.components(separatedBy: " ")
        let firstName:String = fullNameArray[0]
        
        welcomeLabel.text = "Hola \(firstName)..."
        nombreTextField.text = user.displayName
        dniTextField.text = user.DNI
        edadTextField.text = user.edad
        profileImage.sd_setImage(with: URL(string: user.photoURL), completed: nil)
        
        
        //Rounder Imageview
        profileImage.layer.borderWidth = 0.22
        profileImage.layer.masksToBounds = false
        profileImage.layer.borderColor = UIColor.black.cgColor
        profileImage.layer.cornerRadius = profileImage.frame.height/2
        profileImage.clipsToBounds = true
        imagePicker.delegate = self
    }
    

    //Adding photo value button [IMAGE SECTION] -----------------------------//
    var imagePicker = UIImagePickerController() //Creacion de controlador para imagenes
    var imagenID = NSUUID().uuidString
    var imageData:UIImage? = nil
    @IBAction func updateProfilePhotoActionButton(_ sender: Any) {
        imagePicker.sourceType = .savedPhotosAlbum
        imagePicker.allowsEditing = false
        present(imagePicker, animated: true, completion: nil)
    }
     //functions for supporting imagepicker controller -- USED TO ASIGN IMAGE TO UIIMAGE --
     func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {
        //Autogenerated
        let image = info[UIImagePickerController.InfoKey.originalImage] as? UIImage
        self.imageData = image!
        profileImage.image = image
        //elegirContactoBoton.isEnabled = true
        imagePicker.dismiss(animated: true, completion: nil)
     }
     //------------------ END Section for UIImage controller -------------------//
    
    
    
    @IBAction func updateUserActionButton(_ sender: Any) {
        
        
        if imageData == nil {
            //Update of values in case user doesnt update the default IMAGE
            Database.database().reference().root.child("usuarios").child(Auth.auth().currentUser!.uid).updateChildValues(
                ["displayName":nombreTextField.text!,"DNI":dniTextField.text! ,"sex": self.segmentedControlValue, "age":edadTextField.text!])
            print("Registro sin actualizacion de imagen completo.")
            self.navigationController?.popViewController(animated: true)
        }else{
 
        
            //File Upload to Firebase Storage
            let FolderImage = Storage.storage().reference().child("profileImages")
            let ImageData = imageData!.jpegData(compressionQuality: 0.50)
            let uploadedImageName = FolderImage.child("\(imagenID).jpg")
                uploadedImageName.putData(ImageData!, metadata: nil){(metadata, error) in
                    if error != nil {
                        self.mostrarAlerta(titulo: "Error", mensaje: "Se produjo un error al subir la imagen", accion: "Aceptar")
                    }else{
                        uploadedImageName.downloadURL(completion: {(url, error) in
                            //Guard in case url returned value exist, if not show error
                            guard url != nil else {
                            self.mostrarAlerta(titulo: "Error", mensaje: "Se produjo un error al obtener informacion de imagen.", accion: "Cancelar")
                                print("Ocurrio un error al obtener informacion de imagen")
                            return
                            }
                            //Database structure and request for updating values
                            Database.database().reference().root.child("usuarios").child(Auth.auth().currentUser!.uid).updateChildValues(
                                ["displayName":self.nombreTextField.text!,"DNI":self.dniTextField.text!,"photoURL": url!.absoluteString ,"sex": self.segmentedControlValue, "age":self.edadTextField.text!, "photoID":self.imagenID])
                            
                            //Deletes storage registry of user if exist
                            Storage.storage().reference().child("profileImages").child("\(self.user.photoID).jpg").delete(completion: nil)
                            print("Registro con actualizacion de imagen completo.")
                            self.navigationController?.popViewController(animated: true)
                                     
                        })//End Download URL
                    }//End Else
            }//End PutData
        }//End Else
        
    }
    

    

    //Helper function to generate UIAlerts
    func mostrarAlerta(titulo: String, mensaje:String, accion:String) {
        let alerta = UIAlertController(title: titulo, message: mensaje, preferredStyle: .alert)
        
        let btnCANCELOK = UIAlertAction(title: accion, style: .default, handler: nil)
        alerta.addAction(btnCANCELOK)
        present(alerta, animated: true, completion: nil)
    }

        
    
        
}
